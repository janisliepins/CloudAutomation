Description: This stack creates CodePipeline to build an ECS Fargate service from given CodeCommit repository and branch


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Pipeline configuration 
        Parameters: [SourceRepository, ArtifactS3Bucket, SourceRepositoryBranch]      
      
      - Label:
          default: Pipeline associations with other CloudFormation stacks
        Parameters: [IamRoleStack, StorageStack, ComputeStackTest, ComputeStackProd]


Parameters:       
  SourceRepository:
    Description: CodeCommit repository name
    Type: String
    MinLength: 1  

  ArtifactS3Bucket:
    Description: The S3 bucket for deploy artifact
    Type: String
    MinLength: 1 
    
  SourceRepositoryBranch:
    Description: CodeCommit repository branch name which to use in pipeline
    Type: String
    MinLength: 1      

  IamRoleStack:
    Description: IAM stack name 
    Type: String
    MinLength: 1   

  StorageStack:
    Description: Storage stack name 
    Type: String
    MinLength: 1  

  ComputeStackTest:
    Description: Test compute stack name
    Type: String
    MinLength: 1  

  ComputeStackProd:
    Description: Production compute stack name
    Type: String
    MinLength: 1     
    

Resources:  
  CodeBuildProject:
    Type: AWS::CodeBuild::Project   
    Properties:
      Name: !Sub CodeBuildProject-${AWS::StackName}-${SourceRepositoryBranch}    
      ServiceRole: 
        Fn::ImportValue: !Sub ${IamRoleStack}:CodePipelineRoleArn              
      Artifacts:
        Type: CODEPIPELINE
      Environment:        
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-9        
        PrivilegedMode: true 
        EnvironmentVariables:          
          - Name: ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPOSITORY
            Type: PLAINTEXT
            Value: 
              Fn::ImportValue: !Sub ${StorageStack}:EcrRepositoryName   
          - Name: BRANCH_NAME
            Type: PLAINTEXT
            Value: !Ref SourceRepositoryBranch
          - Name: TASK_NAME
            Type: PLAINTEXT
            Value: 
              Fn::ImportValue: !Sub ${ComputeStackTest}:EcsTaskName                  
      Source:        
        Type: CODEPIPELINE         
  
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline    
    Properties:
      Name: !Sub CodePipeline-${AWS::StackName}-${SourceRepositoryBranch} 
      RoleArn:    
        Fn::ImportValue: !Sub ${IamRoleStack}:CodePipelineRoleArn         
      Stages:       
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1               
                Provider: CodeCommit
              OutputArtifacts:                
                - Name: SourceArtifact
              Configuration:                
                BranchName: !Ref SourceRepositoryBranch
                RepositoryName: !Ref SourceRepository              
                PollForSourceChanges: true
              RunOrder: 1        
        - Name: Build
          Actions:
            - Name: BuildAction             
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:                
                - Name: BuildArtifact
              Configuration:                
                ProjectName: !Ref CodeBuildProject
                PrimarySource: SourceArtifact
              RunOrder: 2      
        - Name: DeployTest
          Actions:
            - Name: DeployAction
              InputArtifacts:                
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: 
                  Fn::ImportValue: !Sub ${ComputeStackTest}:EcsClusterId                   
                ServiceName: 
                  Fn::ImportValue: !Sub ${ComputeStackTest}:EcsServiceArn                                
                FileName: imagedefinitions.json 
              RunOrder: 3
        - Name: ProdApproval
          Actions:
            - Name: ApprovalAction
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              RunOrder: 4
        - Name: DeployProd
          Actions:
            - Name: DeployAction
              InputArtifacts:                
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: 
                  Fn::ImportValue: !Sub ${ComputeStackProd}:EcsClusterId                   
                ServiceName: 
                  Fn::ImportValue: !Sub ${ComputeStackProd}:EcsServiceArn                         
                FileName: imagedefinitions.json 
              RunOrder: 5
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactS3Bucket 
         

