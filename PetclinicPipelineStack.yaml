Parameters:
  CodeCommitRepoName:
    Description: A CodeCommit repository that contains the application code. Must be in same region as this stack.
    Type: String
    Default: Petclinic
# https://github.com/aws-samples/aws-codebuild-samples/tree/master/cloudformation
# https://github.com/stelligent/aws-codedeploy-sample-tomcat/blob/master/pipeline.yml
Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            - codecommit:CancelUploadArchive
            - codebuild:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - s3:*
            - cloudformation:*
            - rds:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'  
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'ArtifactsBucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'ArtifactsBucket'
              - /*          
        - Action:
          - codecommit:GitPull
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn
              - aws
              - codecommit
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Ref CodeCommitRepoName        
      PolicyName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildRole'

  CodeBuildProject:
    DependsOn:
    - CodeBuildPolicy
    Properties:
      Artifacts:
        Location: !Ref 'ArtifactsBucket'
        Name: 'petclinic.zip'
        Type: S3      
      Description: !Join
        - ''
        - - 'CodeBuild Project for '
          - !Ref 'AWS::StackName'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
      Name: !Ref 'AWS::StackName'
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ''
          - - 'https://git-codecommit.'
            - !Ref 'AWS::Region'
            - '.amazonaws.com/v1/repos/'
            - !Ref 'CodeCommitRepoName'        
    Type: AWS::CodeBuild::Project

  CodeBuildRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuild
    Type: AWS::IAM::Role

  CodeDeployApplication:
    Properties:
      ApplicationName: !Ref 'AWS::StackName'
    Type: "AWS::CodeDeploy::Application"
  
  CodeDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: allow-autoscaling
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - ec2:*
                  - autoscaling:*
                Resource: "*"
 
  DeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup" # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html
    Properties:
      DeploymentGroupName: !Join
      - '-'
      - - !Ref 'AWS::StackName'
        - DeploymentGroup
      ApplicationName: !Ref CodeDeployApplication        
      ServiceRoleArn: arn:aws:iam::035868780374:role/CodeDeployServiceRole    
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      AutoScalingGroups: ["PetclinicAppStack-AutoScalingGroup-16I8FFTHJT8XN"]

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "ArtifactsBucket"
        Type: S3    
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
          - InputArtifacts: []
            Name: SourceAction
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeCommit
              Version: '1'
            OutputArtifacts:
            - Name: MyApp              
            Configuration:
              RepositoryName: Petclinic
              BranchName: "master"
              PollForSourceChanges: true              
        - Name: Build
          Actions:
          - InputArtifacts:
            - Name: MyApp
            Name: Build
            ActionTypeId:
              Category: Build 
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            OutputArtifacts: 
            - Name: MyAppBuild           
            Configuration:
              ProjectName: !Ref CodeBuildProject  
            RunOrder: 1
        - Name: Deploy
          Actions:
          - InputArtifacts:
            - Name: MyAppBuild
            Name: DeployToProd
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: '1'
              Provider: CodeDeploy
            OutputArtifacts: []
            Configuration:
              ApplicationName:
                Ref: CodeDeployApplication
              DeploymentGroupName:
                Ref: DeploymentGroup
            RunOrder: 1
            
   
  
  ArtifactsBucket:
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for AWS CodePipeline and CodeBuild artifacts
    Properties:
      Tags:
      - Key: Name
        Value: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - ArtifactsBucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket